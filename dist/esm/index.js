#!/usr/bin/env node
import _ from 'chalk-animation';
import S from 'node-fetch';
import F from 'figlet';
import A from 'fs';
import I from 'gradient-string';
import u from 'path';
import y from 'chalk';
import M from 'inquirer';
import { createSpinner } from 'nanospinner';
import R from 'download-git-repo';
import { exec } from 'child_process';
import p from 'fs/promises';
import { program } from 'commander';

var g={scaffoldName:"juice-scaffold",githubName:"Developer27149",repo:"create-juice-app"};var c=(e,...t)=>{console.error(y.bgRed("\u9519\u8BEF\u63D0\u793A"),":",y.red(e),...t);};var m=(e,t)=>{let r=u.basename(process.cwd());return e===r&&(globalThis==null?void 0:globalThis._sameDir_)!==!0?t:`./${e}/${t}`},x=e=>{let t=u.basename(process.cwd());return e===t&&(globalThis==null?void 0:globalThis._sameDir_)!==!0?".":`./${e}`},v=e=>{let t=u.basename(process.cwd());return e===t&&(globalThis==null?void 0:globalThis._sameDir_)!==!0?".":`./${e}`},P=e=>e?e==="."?(globalThis._sameDir_=!1,u.basename(process.cwd())):(A.existsSync(e)&&(c(`\u5F53\u524D\u76EE\u5F55\u4E0B\u5B58\u5728 ${e} \u7684\u540C\u540D\u6587\u4EF6\u5939\u6216\u6587\u4EF6\uFF0C\u65E0\u6CD5\u521B\u5EFA\u9879\u76EE!`),process.exit(0)),e):void 0,C=async e=>{let{projectName:t}=e,r=_.rainbow(`

	Enjoy this project: ${t}!

	Let's do it. \u{1F680}\u{1F680}\u{1F680}

`);r.start(),await(()=>new Promise(n=>setTimeout(n,1e3*2))),r.stop();};function D(e){return new Promise((t,r)=>{F(e,(n,o)=>{if(n)r(n);else {let a=I.pastel(o);t(a);}});})}var N=async()=>{let{githubName:e,repo:t}=g,r={headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Github API Client"}},n=`https://api.github.com/repos/${e}/${t}/branches`;return (await(await S(n,r)).json()).filter(({name:i})=>i!=="main").map(({name:i})=>i)};var k=async(e,t)=>{let r=await N(),n=[{type:"input",name:"description",message:"\u8BF7\u8F93\u5165\u9879\u76EE\u63CF\u8FF0",default:"A funny project \u2764\uFE0F ",validate:s=>s?s.length>1024*10?"\u9879\u76EE\u63CF\u8FF0\u4E0D\u80FD\u8D85\u8FC710KB":!0:"\u9879\u76EE\u63CF\u8FF0\u4E0D\u80FD\u4E3A\u7A7A"},{type:"input",name:"author",message:"\u8BF7\u8F93\u5165\u4F5C\u8005\u540D\u79F0",default:process.env.USER||"\u4F5A\u540D"},{type:"input",name:"port",message:"\u8BF7\u8F93\u5165\u5F00\u53D1\u6A21\u5F0F\u7AEF\u53E3\u53F7",default:9e3,validate:s=>isNaN(Number(s))?"\u7AEF\u53E3\u53F7\u5FC5\u987B\u4E3A\u6570\u5B57":Number(s)<0||Number(s)>65535?"\u7AEF\u53E3\u53F7\u5FC5\u987B\u57280-65535\u4E4B\u95F4":!0},{type:"input",name:"backendApi",message:"\u8BF7\u8F93\u5165\u540E\u7AEF\u63A5\u53E3\u5730\u5740",default:"http://localhost:3000"},{type:"list",name:"packageManager",message:"\u8BF7\u9009\u62E9\u5305\u7BA1\u7406\u5DE5\u5177",choices:["npm","yarn","pnpm"]}];e||n.unshift({type:"input",name:"projectName",message:"\u8BF7\u8F93\u5165\u9879\u76EE\u540D\u79F0",validate:s=>s?!0:"\u9879\u76EE\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A"}),t?r.includes(t)||(c(`\u6A21\u677F ${t} \u4E0D\u5B58\u5728`),process.exit(1)):n.push({type:"list",name:"template",message:"\u8BF7\u9009\u62E9\u6A21\u677F",choices:r});let o=await M.prompt(n),a=u.basename(process.cwd());(o.projectName===a||e===a&&globalThis._sameDir_!==!1)&&(globalThis._sameDir_=!0);let i=e;return o!=null&&o.projectName&&(i=o.projectName==="."?u.basename(process.cwd()):o.projectName),{...o,projectName:i,template:t!=null?t:o.template}};var G=async(e,t)=>{let{githubName:r,repo:n}=g;return new Promise(o=>{let a=`direct:https://github.com/${r}/${n}#${e}`,i=v(t);R(a,i,{clone:!0},s=>{s&&(c("\u4E0B\u8F7D\u6A21\u677F\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u662F\u5426\u6B63\u5E38"),process.exit(1)),o(!0);});})},J=async e=>{let{projectName:t}=e,r=m(t,"package.json"),n=m(t,"README.md"),o=await p.readFile(r,"utf-8"),a=JSON.parse(o);a.author=e.author,a.description=e.description,a.name=e.projectName,await p.writeFile(r,JSON.stringify(a,null,2),{encoding:"utf-8"});let s=(await p.readFile(n,"utf-8")).replace(/{{projectName}}/g,e.projectName).replace(/{{description}}/g,e.description).replace(/{{author}}/g,e.author);await p.writeFile(n,s,{encoding:"utf-8"});let l=m(t,".env"),f=(await p.readFile(l,"utf-8")).replace(/{{backendApi}}/g,e.backendApi).replace(/{{port}}/g,e.port);await p.writeFile(l,f,{encoding:"utf-8"});let b=m(t,".gitignore"),$=await p.readFile(b,"utf-8")+`
.env`;await p.writeFile(b,$,{encoding:"utf-8"});};async function B(e){let t=m(e,".git"),r=m(e,".github");try{await Promise.allSettled([p.rm(t,{recursive:!0,force:!0}),p.rm(r,{recursive:!0,force:!0})]);}catch{}}var H=async(e,t)=>{let{projectName:r,packageManager:n}=e,o=createSpinner("\u5B89\u88C5\u4F9D\u8D56...").start(),a={npm:"npm install",yarn:"yarn",pnpm:"pnpm install"};await B(`./${r}`);let i=a[n];exec(`${n} --version`,s=>{s&&exec(`npm install -g ${n}`,(l,h,f)=>{c('\u5B89\u88C5\u4F9D\u8D56\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u662F\u5426\u5B89\u88C5\u4E86"npm"\u6216"yarn"\u6216"pnpm"'),c(l),c("std out:",h),c("std error:",f);}),exec(i,{cwd:x(r)},l=>{l&&(c("\u5B89\u88C5\u4F9D\u8D56\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u662F\u5426\u6B63\u5E38"),process.exit(1)),o.success({text:"\u5B89\u88C5\u4F9D\u8D56\u6210\u529F"}),t();});});},E=async e=>{let{template:t,projectName:r}=e,n=createSpinner("\u62C9\u53D6\u6587\u4EF6...").start();return await G(t,r),n.success({text:"\u62C9\u53D6\u6587\u4EF6\u6210\u529F"}),n=createSpinner("\u521D\u59CB\u5316\u9879\u76EE\u914D\u7F6E...").start(),await J(e),n.success({text:"\u9879\u76EE\u914D\u7F6E\u6210\u529F"}),new Promise(o=>{H(e,()=>{o(!0);});})};(async()=>{let e=await D("Juice Scaffold");program.version("0.0.1").option("-t, --template <template name>","\u6A21\u677F\u540D\u79F0").argument("[project name]","\u9879\u76EE\u540D\u79F0").action(async(t,r)=>{let n=P(t),o=await k(n,r==null?void 0:r.template);await E(o),C(o);}).addHelpText("before",e),program.parse(process.argv);})();
